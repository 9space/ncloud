source $NINE_CLOUD_ROOT/lib/validate
source $NINE_CLOUD_ROOT/lib/kubeaws

p=$(validate)
if [ "$p" != "OK" ]; then
    echo $p
    exit
fi

cluster=$(validate_cluster_id)
if [ "$cluster" != "OK" ]; then
    echo $cluster
    exit
fi

cd $NINE_CLOUD_CLUSTER

domain=`echo $NINE_CLOUD_CLUSTER_DNS_NAME | rev | cut -d '.' -f 1,2 | rev`
#aws route53 list-hosted-zones | jq '.HostedZones[] | select (.Name == "test.com.")'
#aws route53 list-hosted-zones-by-name | jq -f /home/ncloud/lib/filters/aws-route53-hostzone-id.jq

elb=$1

if [ "$elb" == "" ]; then
    echo "Missing ELB host"
    exit
fi

hostzone=`aws route53 list-hosted-zones-by-name | jq --arg a "$domain" -f /home/ncloud/lib/filters/aws-route53-hostzone-id.jq | sed -e 's:"/hostedzone/\(.*\)":\1:g'`
echo Hostzone Id: $domain $hostzone
echo Updating DNS record $NINE_CLOUD_CLUSTER_DNS_NAME to
echo $elb

if [ "$hostzone" == "" ]; then
    echo "Hostzone not found"
    return 0;
fi

aws route53 change-resource-record-sets --hosted-zone-id $hostzone --change-batch '
{
  "Comment": "Update the CNAME record set",
  "Changes": [
    {
      "Action": "UPSERT",
      "ResourceRecordSet": {
        "Name": "'$NINE_CLOUD_CLUSTER_DNS_NAME'",
        "Type": "CNAME",
        "TTL": 300,
        "ResourceRecords": [
          {
            "Value": "'$elb'"
          }
        ]
      }
    }
  ]
}'
